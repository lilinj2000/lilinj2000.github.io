<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Markdown介绍 | 李林江的技术博客]]></title>
  <link href="http://lilinj2000.github.io/blog/categories/markdownjie-shao/atom.xml" rel="self"/>
  <link href="http://lilinj2000.github.io/"/>
  <updated>2013-11-22T13:29:26+08:00</updated>
  <id>http://lilinj2000.github.io/</id>
  <author>
    <name><![CDATA[李林江]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Markdown语法介绍-链接]]></title>
    <link href="http://lilinj2000.github.io/blog/2013/11/21/markdown-introduction-for-link/"/>
    <updated>2013-11-21T22:53:00+08:00</updated>
    <id>http://lilinj2000.github.io/blog/2013/11/21/markdown-introduction-for-link</id>
    <content type="html"><![CDATA[<h2>链接</h2>

<p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p>

<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>

<p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p>

<pre><code>This is [an example](http://example.com/ "Title") inline link.

[This link](http://example.net/) has no title attribute.
</code></pre>

<p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p>

<pre><code>See my [About](/about/) page for details.
</code></pre>

<!-- more -->


<p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p>

<pre><code>This is [an example][id] reference-style link.
</code></pre>

<p>你也可以选择性地在两个方括号中间加上一个空格：</p>

<pre><code>This is [an example] [id] reference-style link.
</code></pre>

<p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p>

<pre><code>[id]: http://example.com/  "Optional Title Here"
</code></pre>

<p>链接内容定义的形式为：</p>

<p>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字<br/>
接着一个冒号<br/>
接着一个以上的空格或制表符<br/>
接着链接的网址<br/>
选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</p>

<p>下面这三种链接的定义都是相同：</p>

<p>请注意：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p>

<p>链接网址也可以用方括号包起来：</p>

<pre><code>[id]: &lt;http://example.com/&gt;  "Optional Title Here"
</code></pre>

<p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p>

<pre><code>[id]: http://example.com/longish/path/to/resource/here
    "Optional Title Here"
</code></pre>

<p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p>

<p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p>

<pre><code>[link text][a]
[link text][A]
</code></pre>

<p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 &ldquo;Google&rdquo; 链接到 google.com，你可以简化成：</p>

<pre><code>[Google][]
</code></pre>

<p>然后定义链接内容：</p>

<pre><code>[Google]: http://google.com/
</code></pre>

<p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p>

<pre><code>Visit [Daring Fireball][] for more information.
</code></pre>

<p>然后接着定义链接：</p>

<pre><code>[Daring Fireball]: http://daringfireball.net/
</code></pre>

<p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p>

<p>下面是一个参考式链接的范例：</p>

<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

[1]: http://google.com/        "Google"
[2]: http://search.yahoo.com/  "Yahoo Search"
[3]: http://search.msn.com/    "MSN Search"
</code></pre>

<p>如果改成用链接名称的方式写：</p>

<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

[google]: http://google.com/        "Google"
[yahoo]:  http://search.yahoo.com/  "Yahoo Search"
[msn]:    http://search.msn.com/    "MSN Search"
</code></pre>

<p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p>

<pre><code>I get 10 times more traffic from [Google](http://google.com/ "Google")
than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or
[MSN](http://search.msn.com/ "MSN Search").
</code></pre>

<p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p>

<p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p>

<p>参考:</p>

<p><a href="http://wowubuntu.com/markdown/">markdown语法说明（简体中文版）</a></p>

<p><a href="http://jianshu.io/p/q81RER">献给写作者的 Markdown 新手指南</a></p>

<p><a href="http://zh.wikipedia.org/wiki/Markdown">markdown-维基百科</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown语法介绍-标题和列表]]></title>
    <link href="http://lilinj2000.github.io/blog/2013/11/21/markdown-introduction-for-title-and-list/"/>
    <updated>2013-11-21T22:30:00+08:00</updated>
    <id>http://lilinj2000.github.io/blog/2013/11/21/markdown-introduction-for-title-and-list</id>
    <content type="html"><![CDATA[<h2>标题</h2>

<p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p>

<p>类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 &ndash; （第二阶标题），例如：</p>

<pre><code>This is an H1
=============

This is an H2
-------------
</code></pre>

<p>任何数量的 = 和 &ndash; 都可以有效果。</p>

<p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p>

<pre><code># 这是 H1

## 这是 H2

###### 这是 H6 
</code></pre>

<!-- more -->


<h2>列表</h2>

<p>Markdown 支持有序列表和无序列表。</p>

<p>无序列表使用星号、加号或是减号作为列表标记：</p>

<pre><code>*   Red
*   Green
*   Blue
</code></pre>

<p>等同于：</p>

<pre><code>+   Red
+   Green
+   Blue
</code></pre>

<p>也等同于：</p>

<pre><code>-   Red
-   Green
-   Blue
</code></pre>

<p>有序列表则使用数字接着一个英文句点：</p>

<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre>

<p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果。</p>

<p>如果你的列表标记写成：</p>

<pre><code>1.  Bird
1.  McHale
1.  Parish
</code></pre>

<p>或甚至是：</p>

<pre><code>3. Bird
1. McHale
8. Parish
</code></pre>

<p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p>

<p>参考:</p>

<p><a href="http://wowubuntu.com/markdown/">markdown语法说明（简体中文版）</a></p>

<p><a href="http://jianshu.io/p/q81RER">献给写作者的 Markdown 新手指南</a></p>

<p><a href="http://zh.wikipedia.org/wiki/Markdown">markdown-维基百科</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown简介]]></title>
    <link href="http://lilinj2000.github.io/blog/2013/11/21/markdown-basic-knowledge/"/>
    <updated>2013-11-21T22:15:00+08:00</updated>
    <id>http://lilinj2000.github.io/blog/2013/11/21/markdown-basic-knowledge</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）和亚伦·斯沃茨（Aaron Swartz）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。</p>

<p>这是一种[电子邮件风格]的标记语言，其主要目标就是实现[易读易写]。</p>

<!-- more -->


<p>Markdown的优点有：</p>

<ul>
<li>纯文本，所以兼容性极强，可以用所有文本编辑器打开。</li>
<li>让你专注于文字而不是排版。</li>
<li>格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。</li>
<li>Markdown 的标记语法有极好的可读性。</li>
</ul>


<p>参考:</p>

<p><a href="http://wowubuntu.com/markdown/">markdown语法说明（简体中文版）</a></p>

<p><a href="http://jianshu.io/p/q81RER">献给写作者的 Markdown 新手指南</a></p>

<p><a href="http://zh.wikipedia.org/wiki/Markdown">markdown-维基百科</a></p>
]]></content>
  </entry>
  
</feed>
